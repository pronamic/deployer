#!/bin/bash

# Pronamic Deployer
# https://github.com/pronamic/deployer

while [ $# -gt 0 ]
do
    case "$1" in
        -s)  SLUG="$2"; MAIN_FILE="$SLUG.php"; shift;;
        -g)  GIT_URL="$2"; shift;;
        -m)  MAIN_FILE="$2"; shift;;
        -*)
            echo >&2 \
            "usage: $0 [-p plugin-name] [-u svn-username] [-m main-plugin-file] [-a assets-dir-name] [-t tmp directory] [-i path/to/i18n] [-h history/changelog file]"
            exit 1;;
        *)  break;; # terminate while loop
    esac
    shift
done

# General
DEPLOYER_DIR=$(pwd)

# Git
GIT_PATH="git/$SLUG"

# Build
BUILD_DIR="build"
BUILD_PATH="$BUILD_DIR/$SLUG"

# ZIP
ZIP_PATH="zip/$SLUG"

# Validate

if [ -z "$SLUG" ]; then
	echo "‚ùå  Empty slug."

	exit 1;
fi

if [ -z "$GIT_URL" ]; then
	echo "‚ùå  Empty Git URL."

	exit 1;
fi

if [ -z "$MAIN_FILE" ]; then
    echo "‚ùå  Empty main file."

    exit 1;
fi

# Start

echo
echo 'üöÄ Pronamic Deployer v1.0.0'
echo 
echo "Deployer Directory: $DEPLOYER_DIR"
echo
echo "Git URL: $GIT_URL"
echo "Git path: $GIT_PATH"
echo 
echo "Main File: $MAIN_FILE"
echo
echo "Build path: $BUILD_PATH"
echo "ZIP path: $ZIP_PATH"
echo

# Git clone

if [ ! -d "$GIT_PATH" ]; then
	git clone $GIT_URL $GIT_PATH
fi

# Git pull

echo
echo "‚ÑπÔ∏è  Git pull"
echo

cd ./$GIT_PATH

git pull

cd $DEPLOYER_DIR

echo

# Git checkout

echo
echo "‚ÑπÔ∏è  Git checkout master"
echo

cd ./$GIT_PATH

git checkout master

git pull

cd $DEPLOYER_DIR

echo

# Version check

if [ ! -f "$GIT_PATH/$MAIN_FILE" ]; then
    echo "‚ùå  Main file `$MAIN_FILE` not found."

    exit 1;
fi

MAIN_FILE_VERSION=$(grep -i "Version:" $GIT_PATH/$MAIN_FILE | awk -F ' ' '{print $NF}' | tr -d '\r')
README_TXT_VERSION=$(grep -i "Stable tag:" $GIT_PATH/readme.txt | awk -F' ' '{print $NF}' | tr -d '\r')
VERSION=$MAIN_FILE_VERSION

echo
echo "‚ÑπÔ∏è  Version"
echo
echo "Main file version: $MAIN_FILE_VERSION"
echo "Readme.txt version: $README_TXT_VERSION"
echo

if [ "$MAIN_FILE_VERSION" != "$README_TXT_VERSION" ]; then
    echo "Version in readme.txt & $MAIN_FILE don't match. Exiting‚Ä¶"

    exit 1;
fi

# Composer

echo
echo "‚ÑπÔ∏è  Composer"
echo

cd ./$GIT_PATH

composer install --no-dev --prefer-dist --optimize-autoloader

cd $DEPLOYER_DIR

# Build

echo
echo "‚ÑπÔ∏è  Build"
echo

rm -r ./$BUILD_PATH

mkdir ./$BUILD_PATH

rsync --recursive --delete --exclude-from=exclude.txt --verbose ./$GIT_PATH/ ./$BUILD_PATH/

# ZIP

echo
echo "üóÑÔ∏è  ZIP"
echo

cd ./$BUILD_DIR

zip --recurse-paths $DEPLOYER_DIR/$ZIP_PATH/$SLUG.$VERSION.zip $SLUG/*

cd $DEPLOYER_DIR
